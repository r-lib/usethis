% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{create_from_github}
\alias{create_from_github}
\title{Create a project from a GitHub repo}
\usage{
create_from_github(
  repo_spec,
  destdir = NULL,
  fork = NA,
  rstudio = NULL,
  open = rlang::is_interactive(),
  protocol = git_protocol(),
  auth_token = github_token(),
  host = NULL,
  credentials = deprecated()
)
}
\arguments{
\item{repo_spec}{GitHub repo specification in this form: \code{owner/repo}. The
\code{repo} part will be the name of the new local repo.}

\item{destdir}{The new folder is stored here. If \code{NULL}, defaults to user's
Desktop or some other conspicuous place. You can also set a default
location using the option \code{usethis.destdir}, e.g.
\code{options(usethis.destdir = "a/good/dir")}, perhaps saved to your
\code{.Rprofile} with \code{\link[=edit_r_profile]{edit_r_profile()}}}

\item{fork}{If \code{TRUE}, we create and clone a fork. If \code{FALSE}, we clone
\code{repo_spec} itself. Will be set to \code{FALSE} if no \code{auth_token} (a.k.a. PAT)
is provided or preconfigured. Otherwise, defaults to \code{FALSE} if you can
push to \code{repo_spec} and \code{TRUE} if you cannot. In the case of a fork, the
original target repo is added to the local repo as the \code{upstream} remote,
using the preferred \code{protocol}. The \code{master} branch is set to track
\code{upstream/master} and is immediately pulled, which matters in the case of a
pre-existing, out-of-date fork.}

\item{rstudio}{Initiate an \href{https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects}{RStudio Project}?
Defaults to \code{TRUE} if in an RStudio session and project has no
pre-existing \code{.Rproj} file. Defaults to \code{FALSE} otherwise.}

\item{open}{If \code{TRUE}, \link[=proj_activate]{activates} the new project:
\itemize{
\item If RStudio desktop, the package is opened in a new session.
\item If on RStudio server, the current RStudio project is activated.
\item Otherwise, the working directory and active project is changed.
}}

\item{protocol}{Optional. Should be "ssh" or "https", if specified. Defaults
to the option \code{usethis.protocol} and, if unset, to an interactive choice
or, in non-interactive sessions, "ssh". \code{NA} triggers the interactive menu.}

\item{auth_token}{GitHub personal access token (PAT).}

\item{host}{GitHub API host to use. Override with the endpoint-root for your
GitHub enterprise instance, for example,
"https://github.hostname.com/api/v3".}

\item{credentials}{\lifecycle{defunct}: No longer consulted now that usethis
uses the gert package for Git operations, instead of git2r. Note that gert
relies on the credentials package for auth.}
}
\description{
Creates a new local Git repository from a repository on GitHub. It is highly
recommended that you pre-configure or pass a GitHub personal access token
(PAT), which is facilitated by \code{\link[=create_github_token]{create_github_token()}}. In particular, a PAT
is required in order for \code{create_from_github()} to do \href{https://help.github.com/articles/fork-a-repo/}{"fork and clone"}. It is also required
by \code{\link[=use_github]{use_github()}}, which connects existing local projects to GitHub.
}
\section{Authentication}{

This function potentially interacts with GitHub in two different ways:
\itemize{
\item via the GitHub REST API
\item as a conventional Git remote
Therefore two types of auth may happen.
}

TODO: Finish this section. Figure out how to share docs with the analogous
section in \code{\link[=use_github]{use_github()}}.
}

\examples{
\dontrun{
create_from_github("r-lib/usethis")
}
}
\seealso{
\itemize{
\item \code{\link[=use_github]{use_github()}} for advice on auth setup
\item \code{\link[=git_protocol]{git_protocol()}} for background on \code{protocol}
\item \code{\link[=use_course]{use_course()}} can expedite a one-time download of all files in a GitHub
repo, without the need for any local or remote Git operations
}
}
