% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_import_from.R
\name{use_import_from}
\alias{use_import_from}
\title{Import a function from another package}
\usage{
use_import_from(package, fun, load = is_interactive())
}
\arguments{
\item{package}{Name of package to import \code{fun} from}

\item{fun}{Name of function to import}

\item{load}{Logical. Re-load with \code{\link[pkgload:load_all]{pkgload::load_all()}}?}
}
\value{
Invisibly, \code{TRUE} if the package document has changed, \code{FALSE} if
not.
}
\description{
\code{use_import_from()} imports a function from another package by adding the
Roxygen tag \verb{@importFrom} to the package-level documentation (possibly
created with \code{\link[=use_package_doc]{use_package_doc()}}). Importing a function from another
package allows you to refer to it without a namespace (e.g., \code{fun()} instead
of \code{package::fun()}). Use such imports judiciously, as they make it hard to
tell where a function comes from.
}
\examples{

\dontrun{
use_import_from("usethis", "ui_todo")
}

}
