% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_github.R
\name{use_github}
\alias{use_github}
\title{Connect a local repo with GitHub}
\usage{
use_github(
  organisation = NULL,
  private = FALSE,
  protocol = git_protocol(),
  credentials = NULL,
  auth_token = github_token(),
  host = NULL
)
}
\arguments{
\item{organisation}{If supplied, the repo will be created under this
organisation, instead of the account of the user associated with the
\code{auth_token}. You must have permission to create repositories.}

\item{private}{If \code{TRUE}, creates a private repository.}

\item{protocol}{Optional. Should be "ssh" or "https", if specified. Defaults
to the option \code{usethis.protocol} and, if unset, to an interactive choice
or, in non-interactive sessions, "ssh". \code{NA} triggers the interactive menu.}

\item{credentials}{A git2r credential object produced with
\code{\link[git2r:cred_env]{git2r::cred_env()}}, \code{\link[git2r:cred_ssh_key]{git2r::cred_ssh_key()}}, \code{\link[git2r:cred_token]{git2r::cred_token()}}, or
\code{\link[git2r:cred_user_pass]{git2r::cred_user_pass()}}.}

\item{auth_token}{GitHub personal access token (PAT).}

\item{host}{GitHub API host to use. Override with the endpoint-root for your
GitHub enterprise instance, for example,
"https://github.hostname.com/api/v3".}
}
\description{
\code{use_github()} takes a local project and:
\itemize{
\item Checks that the initial state is good to go:
\itemize{
\item Project is already a Git repo
\item Current branch is \code{master}
\item No uncommitted changes
\item No pre-existing \code{origin} remote
}
\item Creates an associated repo on GitHub
\item Adds that GitHub repo to your local repo as the \code{origin} remote
\item Offers to commit changes, e.g. the addition of GitHub links to the
URL and BugReports fields of DESCRIPTION
\item Makes an initial push to GitHub
\item Configures \code{origin/master} to be the upstream branch of the local \code{master}
branch
}

See the Authentication section below for general setup that is necessary for
all of this to work.
}
\section{Authentication}{

A new GitHub repo will be created via the GitHub API, therefore you must
make a \href{https://github.com/settings/tokens}{GitHub personal access token (PAT)} available. Here are different ways
to provide the token, in order of preference:
\itemize{
\item Configure your token as the \code{GITHUB_PAT} env var in \code{.Renviron}. Then it
can be used by many packages and functions, without any effort on your
part. If you don't have a token yet, see \code{\link[=browse_github_token]{browse_github_token()}}. Remember
that \code{\link[=edit_r_environ]{edit_r_environ()}} can help get \code{.Renviron} open for editing.
\item Use \code{\link[=github_token]{github_token()}} to store your token for the duration of the current R
session.
\item Provide the token directly via the \code{auth_token} argument.
}
}

\examples{
\dontrun{
pkgpath <- file.path(tempdir(), "testpkg")
create_package(pkgpath) # creates package below temp directory
proj_set(pkgpath)

## now, working inside "testpkg", initialize git repository
use_git()

## create github repository and configure as git remote
use_github()
}
}
