% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/course.R
\name{tidy_unzip}
\alias{tidy_unzip}
\title{Unpack a ZIP file}
\usage{
tidy_unzip(zipfile)
}
\arguments{
\item{zipfile}{Path to local ZIP file.}
}
\value{
Path to the directory holding the unpacked files.
}
\description{
Special-purpose function to unpack a ZIP file and (attempt to) create the
directory structure most people actually want. The main reason to finesse the
directory structure: we want the same local result when unzipping the same
content from either GitHub or DropBox ZIP files, which pack things
differently. Here is the intent:
\itemize{
\item If the ZIP archive \code{foo.zip} does not contain a single top-level directory,
i.e. it is packed as "loose parts", unzip into a directory named \code{foo}.
Typical of DropBox ZIP files.
\item If the ZIP archive \code{foo.zip} has a single top-level directory (which, by
the way, is not necessarily called "foo"), accept default unzip behavior.
Typical of GitHub ZIP files.
}
}
\section{DropBox}{

The ZIP files produced by DropBox are special. The file list tends to contain
a spurious directory \code{"/"}, which we ignore during unzip. Also, if the
directory is a Git repo and/or RStudio Project, we unzip-ignore various
hidden files, such as those below \code{.git/} and \code{.Rproj.user}.
}

\examples{
\dontrun{
tidy_unzip("foo.zip")
}
}
\keyword{internal}
